apiVersion: v1
kind: Service
metadata:
  name: cluster-agent
  namespace: datadog
  labels:
    app: cluster-agent
spec:
  ports:
  - port: 5005
    protocol: TCP
    name: cluster-agent
  selector:
    app: cluster-agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-agent
  namespace: datadog
spec:
  selector:
    matchLabels:
      app: cluster-agent
  template:
    metadata:
      labels:
        app: cluster-agent
      name: cluster-agent
      annotations:
        ad.datadoghq.com/datadog-cluster-agent.check_names: '["prometheus"]'
        ad.datadoghq.com/datadog-cluster-agent.init_configs: '[{}]'
        ad.datadoghq.com/datadog-cluster-agent.instances: '[{"prometheus_url": "http://%%host%%:5000/metrics","namespace": "datadog.cluster_agent","metrics": ["go_goroutines","go_memstats_*","process_*","api_requests","datadog_requests","external_metrics", "cluster_checks_*"]}]'
    spec:
      serviceAccountName: cluster-agent
      containers:
      - image: datadog/cluster-agent:latest
        imagePullPolicy: Always
        name: cluster-agent
        ports:
        - containerPort: 5005
          protocol: TCP
          name: cluster-agent
        env:
          - name: DD_API_KEY
            valueFrom:
              secretKeyRef:
                name: datadog
                key: api
          - name: DD_COLLECT_KUBERNETES_EVENTS
            value: "true"
          - name: DD_LEADER_ELECTION
            value: "true"
          - name: DD_CLUSTER_AGENT_AUTH_TOKEN
            valueFrom:
              secretKeyRef:
                name: datadog
                key: token
          - name: DD_EXTERNAL_METRICS_PROVIDER_ENABLED
            value: 'true'
