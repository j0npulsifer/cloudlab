apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: thehive
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  defaultAllowPrivilegeEscalation: false
  allowPrivilegeEscalation: false
  allowedUnsafeSysctls: []
  allowedCapabilities: []
  requiredDropCapabilities:
  - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  fsGroup:
    ranges:
    - max: 999
      min: 999
    rule: MustRunAs
  runAsUser:
    rule: MustRunAs
    ranges:
    - max: 999
      min: 999
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - emptyDir
  - secret
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: cortex
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  defaultAllowPrivilegeEscalation: false
  allowPrivilegeEscalation: false
  allowedUnsafeSysctls: []
  allowedCapabilities: []
  requiredDropCapabilities:
  - ALL
  hostNetwork: false
  hostIPC: false
  hostPID: false
  fsGroup:
    ranges:
    - max: 0
      min: 0
    rule: MustRunAs
  runAsUser:
    rule: MustRunAs
    ranges:
    - max: 0
      min: 0
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - secret
  - hostPath
